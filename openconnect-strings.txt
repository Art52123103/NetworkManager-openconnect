This file contains strings from the OpenConnect VPN client, found at
http://www.infradead.org/openconnect/ and browseable in gitweb at
http://git.infradead.org/users/dwmw2/openconnect.git

We do this because NetworkManager-openconnect authentication dialog
uses a lot of strings from libopenconnect, which also need to be
translated too if the user is to have a fully localised experience.

For translators looking to see source comments in their original context
in order to translate them properly, the URLs by each one will give a
link to the original source code.

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/xml.c#l42
_("Failed to open XML config file: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/xml.c#l49
_("Failed to fstat() XML config file: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/xml.c#l58
_("Failed to allocate %lu bytes for XML config file\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/xml.c#l65
_("Failed to read XML config file: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/xml.c#l95
// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/xml.c#l118
_("Treating host \"%s\" as a raw hostname\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/xml.c#l101
_("Failed to SHA1 existing file\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/xml.c#l108
_("XML config file SHA1: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/xml.c#l116
_("Failed to parse XML config file %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/xml.c#l153
_("Host \"%s\" has address \"%s\"\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/xml.c#l162
_("Host \"%s\" has UserGroup \"%s\"\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/xml.c#l176
_("Host \"%s\" not listed in config; treating as raw hostname\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l243
_(""
"For assistance with OpenConnect, please see the web page at\n"
" http://www.infradead.org/openconnect/mail.html\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l252
_("Using OpenSSL. Features present:");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l254
_("Using GnuTLS. Features present:");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l263
_("OpenSSL ENGINE not present");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l283
_("using OpenSSL");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l287
_(""
"\n" 
"WARNING: No DTLS support in this binary. Performance will be impaired.\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l301
_("Cannot process this executable path \"%s\"");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l307
_("Allocation for vpnc-script path failed\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l318
_("Usage:  openconnect [options] <server>\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l319
_(""
"Open client for Cisco AnyConnect VPN, version %s\n"
"\n" );

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l321
_("Read options from config file");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l323
_("Continue in background after startup");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l324
_("Write the daemon's PID to this file");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l326
_("Use SSL client certificate CERT");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l327
_("Warn when certificate lifetime < DAYS");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l328
_("Use SSL private key file KEY");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l329
_("Use WebVPN cookie COOKIE");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l330
_("Read cookie from standard input");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l331
_("Enable compression (default)");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l332
_("Disable compression");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l333
_("Set minimum Dead Peer Detection interval");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l334
_("Set login usergroup");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l335
_("Display help text");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l336
_("Use IFNAME for tunnel interface");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l338
_("Use syslog for progress messages");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l340
_("Prepend timestamp to progress messages");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l342
_("Drop privileges after connecting");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l343
_("Drop privileges during CSD execution");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l344
_("Run SCRIPT instead of CSD binary");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l346
_("Request MTU from server");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l347
_("Indicate path MTU to/from server");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l348
_("Set key passphrase or TPM SRK PIN");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l349
_("Key passphrase is fsid of file system");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l350
_("Set proxy server");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l351
_("Disable proxy");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l352
_("Use libproxy to automatically configure proxy");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l354
_("(NOTE: libproxy disabled in this build)");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l356
_("Require perfect forward secrecy");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l357
_("Less output");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l358
_("Set packet queue limit to LEN pkts");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l359
_("Shell command line for using a vpnc-compatible config script");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l360
_("default");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l362
_("Pass traffic to 'script' program, not tun");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l364
_("Set login username");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l365
_("Report version number");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l366
_("More output");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l367
_("Dump HTTP authentication traffic (implies --verbose");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l368
_("XML config file");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l369
_("Choose authentication login selection");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l370
_("Authenticate only and print login info");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l371
_("Fetch webvpn cookie only; don't connect");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l372
_("Print webvpn cookie before connecting");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l373
_("Cert file for server verification");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l374
_("Do not ask for IPv6 connectivity");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l375
_("OpenSSL ciphers to support for DTLS");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l376
_("Disable DTLS");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l377
_("Disable HTTP connection re-use");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l378
_("Disable password/SecurID authentication");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l379
_("Do not require server SSL cert to be valid");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l380
_("Do not attempt XML POST authentication");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l381
_("Do not expect user input; exit if it is required");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l382
_("Read password from standard input");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l383
_("Software token type: rsa or totp");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l384
_("Software token secret");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l386
_("(NOTE: libstoken (RSA SecurID) disabled in this build)");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l389
_("(NOTE: liboath (TOTP) disabled in this build)");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l391
_("Connection retry timeout in seconds");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l392
_("Server's certificate SHA1 fingerprint");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l393
_("HTTP header User-Agent: field");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l394
_("OS type (linux,linux-64,win,...) to report");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l395
_("Set local port for DTLS datagrams");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l407
_("Allocation failure for string from stdin\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l430
_("fgets (stdin)");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l486
_("Failed to allocate string\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l525
_("Failed to get line from config file: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l565
_("Unrecognised option at line %d: '%s'\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l575
_("Option '%s' does not take an argument at line %d\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l579
_("Option '%s' requires an argument at line %d\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l623
_(""
"WARNING: This version of openconnect is %s but\n"
" the libopenconnect library is %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l633
_("Failed to allocate vpninfo structure\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l655
_("Cannot use 'config' option inside config file\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l660
_("Cannot open config file '%s': %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l758
// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l767
_("MTU %d too small\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l788
_(""
"Disabling all HTTP connection re-use due to --no-http-keepalive option.\n"
"If this helps, please report to <openconnect-devel@lists.infradead.org>.\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l814
// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l828
_("Invalid user \"%s\"\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l847
_("Queue length zero not permitted; using 1\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l860
_("OpenConnect version %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l886
_("Invalid software token mode \"%s\"\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l896
_("Invalid OS identity \"%s\"\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l917
_("Too many arguments on command line\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l920
_("No server specified\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l933
_("This version of openconnect was built without libproxy support\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l955
_("Error opening cmd pipe\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l1005
_("Failed to obtain WebVPN cookie\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l1029
_("Creating SSL connection failed\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l1039
_("Set up tun script failed\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l1046
_("Set up tun device failed\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l1054
// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l588
_("Failed to set uid %ld\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l1063
_("Set up DTLS failed; using SSL instead\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l1067
_("Connected %s as %s%s%s, using %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l1077
_("No --script argument provided; DNS and routing are not configured\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l1079
_("See http://www.infradead.org/openconnect/vpnc-script.html\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l1092
_("Failed to open '%s' for write: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l1104
_("Continuing in background; pid %d\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l1119
_("Caught signal: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l1141
_("Failed to open %s for write: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l1149
_("Failed to write config to %s: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l1215
_(""
"\n" 
"Certificate from VPN server \"%s\" failed verification.\n"
"Reason: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l1221
_("Enter '%s' to accept, '%s' to abort; anything else to view: ");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l1222
// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l1229
_("yes");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l1222
// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l1240
_("no");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l1246
_("SHA1 fingerprint: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l1280
_("Auth choice \"%s\" matches multiple options\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l1283
_("Auth choice \"%s\" not available\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l1300
_("User input required in non-interactive mode\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l1454
// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l1474
_("Soft token string is invalid\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l1457
_("Can't open ~/.stokenrc file\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l1460
_("OpenConnect was not built with libstoken support\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l1463
_("General failure in libstoken\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l1477
_("OpenConnect was not built with liboath support\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/main.c#l1480
_("General failure in liboath\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l103
_("Failed to write to SSL socket\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l110
// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l83
_("SSL write cancelled\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l135
// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l187
_("Failed to read from SSL socket\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l142
// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l195
// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l116
// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l176
_("SSL read cancelled\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l372
// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l851
// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l1289
_("Enter PEM pass phrase:");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l379
_("PEM password too long (%d >= %d)\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l407
// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l352
_("Enter PKCS#12 pass phrase:");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l420
_("Parse PKCS#12 failed (wrong passphrase?)\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l427
_("Parse PKCS#12 failed (see above errors)\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l439
// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l576
// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l1406
_("Using client certificate '%s'\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l442
_("PKCS#12 contained no certificate!");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l451
_("PKCS#12 contained no private key!");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l472
_("Extra cert from PKCS#12: '%s'\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l498
_("Can't load TPM engine.\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l504
_("Failed to init TPM engine\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l514
_("Failed to set TPM SRK password\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l528
_("Failed to load TPM private key\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l534
_("Add key from TPM failed\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l548
// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l1210
_("This version of OpenConnect was built without TPM support\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l565
_("Failed to reload X509 cert for expiry check\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l599
// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l260
_("Failed to load item '%s' from keystore: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l605
_("Failed to create BIO for keystore item '%s'\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l630
_("Loading private key failed (wrong passphrase?)\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l636
_("Loading private key failed (see above errors)\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l645
// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l905
_("This binary built without PKCS#11 support\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l650
// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l979
_("Using certificate file %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l661
_("Failed to open certificate file %s: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l672
_("Read PKCS#12 failed\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l690
_("Failed to load X509 certificate from keystore\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l696
_("Failed to use X509 certificate from keystore\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l708
_("Loading certificate failed\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l735
_("Failed to use private key from keystore\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l751
_("Failed to open private key file %s: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l771
_("Failed to identify private key type in '%s'\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l832
// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l1736
_("Server SSL certificate didn't match: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l952
_("Matched DNS altname '%s'\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l959
_("No match for altname '%s'\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l973
_("Certificate has GEN_IPADD altname with bogus length %d\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l984
_("Matched %s address '%s'\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l991
_("No match for %s address '%s'\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l1033
_("URI '%s' has non-empty path; ignoring\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l1038
_("Matched URI '%s'\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l1049
_("No match for URI '%s'\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l1064
_("No altname in peer cert matched '%s'\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l1072
_("No subject name in peer cert!\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l1092
_("Failed to parse subject name in peer cert\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l1099
_("Peer cert subject mismatch ('%s' != '%s')\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l1104
_("Matched peer certificate subject name '%s'\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l1130
// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l1780
_("certificate does not match hostname");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l1134
_("Server certificate verify failed: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l1184
_("Extra cert from cafile: '%s'\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l1215
_("Error in client cert notAfter field\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l1218
// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l204
_("Client certificate has expired at");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l1223
// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l206
_("Client certificate expires soon at");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l1228
_("<error>");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l1277
// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l1912
_("Loading certificate failed. Aborting.\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l1322
_("Failed to read certs from CA file '%s'\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l1346
_("Failed to open CA file '%s'\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l1364
// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l1949
_("SSL negotiation with %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l1380
_("SSL connection failure\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l1390
// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l1986
_("SSL connection cancelled\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/openssl.c#l1410
// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l2008
_("Connected to HTTPS on %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l87
_("Failed to write to SSL socket: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l123
_("SSL socket closed uncleanly\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l126
// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l181
_("Failed to read from SSL socket: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l199
_("Could not extract expiration time of certificate\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l273
_("Failed to open key/certificate file %s: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l280
_("Failed to stat key/certificate file %s: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l289
_("Failed to allocate certificate buffer\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l297
_("Failed to read certificate into memory: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l328
_("Failed to setup PKCS#12 data structure: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l339
_("Failed to import PKCS#12 file: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l348
_("Failed to decrypt PKCS#12 certificate file\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l376
_("Failed to process PKCS#12 file: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l388
_("Failed to load PKCS#12 certificate: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l548
_("Importing X509 certificate failed: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l558
_("Setting PKCS#11 certificate failed: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l598
_("Could not initialise MD5 hash: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l608
_("MD5 hash error: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l666
_("Missing DEK-Info: header from OpenSSL encrypted key\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l673
_("Cannot determine PEM encryption type\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l686
_("Unsupported PEM encryption type: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l711
// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l724
_("Invalid salt in encrypted PEM file\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l748
_("Error base64-decoding encrypted PEM file: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l756
_("Encrypted PEM file too short\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l784
_("Failed to initialise cipher for decrypting PEM file: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l795
_("Failed to decrypt PEM key: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l847
_("Decrypting PEM key failed\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l955
_("Using PKCS#11 certificate %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l968
_("Error loading certificate from PKCS#11: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l1008
_("PKCS#11 file contained no certificate\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l1034
_("No certificate found in file");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l1039
_("Loading certificate failed: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l1054
_("Using PKCS#11 key %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l1059
_("Error initialising PKCS#11 key structure: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l1149
_("Error importing PKCS#11 URL %s: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l1159
_("Error initialising private key structure: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l1169
_("Error importing PKCS#11 key into private key structure: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l1197
_("Using private key file %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l1231
_("Failed to interpret PEM file\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l1250
_("Failed to load PKCS#1 private key: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l1263
// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l1277
_("Failed to load private key as PKCS#8: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l1285
_("Failed to decrypt PKCS#8 certificate file\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l1299
_("Failed to determine type of private key %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l1311
_("Failed to get key ID: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l1356
_("Error signing test data with private key: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l1371
_("Error validating signature against certificate: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l1395
_("No SSL certificate found to match private key\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l1413
_("Setting certificate recovation list failed: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l1434
// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l1444
_("Failed to allocate memory for certificate\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l1480
_(""
"WARNING: GnuTLS returned incorrect issuer certs; authentication may fail!\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l1505
_("Got next CA '%s' from PKCS11\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l1533
_("Failed to allocate memory for supporting certificates\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l1556
_("Adding supporting CA '%s'\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l1584
_("Setting certificate failed: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l1716
_("Server presented no certificate\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l1728
_("Could not calculate SHA1 of server's certificate\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l1744
_("Error checking server cert status\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l1749
_("certificate revoked");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l1751
_("signer not found");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l1753
_("signer not a CA certificate");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l1755
_("insecure algorithm");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l1757
_("certificate not yet activated");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l1759
_("certificate expired");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l1764
_("signature verification failed");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l1768
_("Error initialising X509 cert structure\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l1774
_("Error importing server's cert\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l1862
_("Failed to allocate memory for cafile certs\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l1883
_("Failed to read certs from cafile: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l1899
_("Failed to open CA file '%s': %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l1937
_("Failed to set TLS priority string: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l1993
_("SSL connection failure: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l2002
_("GnuTLS non-fatal return during handshake: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l2011
_("Renegotiated SSL on %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l2195
_("PIN required for %s");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l2205
_("Wrong PIN");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l2208
_("This is the final try before locking!");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l2210
_("Only a few tries left before locking!");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls.c#l2215
_("Enter PIN:");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls_tpm.c#l82
_("Failed to SHA1 input data for signing: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls_tpm.c#l104
_("TPM sign function called for %d bytes.\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls_tpm.c#l111
_("Failed to create TPM hash object: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls_tpm.c#l118
_("Failed to set value in TPM hash object: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls_tpm.c#l128
_("TPM hash signature failed: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls_tpm.c#l150
_("Error decoding TSS key blob: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls_tpm.c#l157
// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls_tpm.c#l168
// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls_tpm.c#l181
_("Error in TSS key blob\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls_tpm.c#l188
_("Failed to create TPM context: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls_tpm.c#l195
_("Failed to connect TPM context: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls_tpm.c#l203
_("Failed to load TPM SRK key: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls_tpm.c#l210
_("Failed to load TPM SRK policy object: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls_tpm.c#l231
_("Failed to set TPM PIN: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls_tpm.c#l247
_("Failed to load TPM key blob: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls_tpm.c#l254
_("Enter TPM SRK PIN:");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls_tpm.c#l279
_("Failed to create key policy object: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls_tpm.c#l287
_("Failed to assign policy to key: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls_tpm.c#l293
_("Enter TPM key PIN:");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/gnutls_tpm.c#l304
_("Failed to set key PIN: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/ssl.c#l81
_("Socket connect cancelled\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/ssl.c#l115
_("Failed to reconnect to proxy %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/ssl.c#l119
_("Failed to reconnect to host %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/ssl.c#l182
_("Proxy from libproxy: %s://%s:%d/\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/ssl.c#l211
_("getaddrinfo failed for host '%s': %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/ssl.c#l227
_("Attempting to connect to proxy %s%s%s:%s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/ssl.c#l228
_("Attempting to connect to server %s%s%s:%s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/ssl.c#l245
_("Failed to allocate sockaddr storage\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/ssl.c#l277
_("Failed to connect to host %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/ssl.c#l349
_("statvfs: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/ssl.c#l391
_("statfs: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/ssl.c#l472
_("No error");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/ssl.c#l473
_("Keystore locked");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/ssl.c#l474
_("Keystore uninitialized");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/ssl.c#l475
_("System error");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/ssl.c#l476
_("Protocol error");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/ssl.c#l477
_("Permission denied");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/ssl.c#l478
_("Key not found");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/ssl.c#l479
_("Value corrupted");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/ssl.c#l480
_("Undefined action");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/ssl.c#l484
_("Wrong password");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/ssl.c#l485
_("Unknown error");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l138
_("No memory for allocating cookies\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l193
// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/cstp.c#l237
_("Error fetching HTTPS response\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l203
_("Failed to parse HTTP response '%s'\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l209
_("Got HTTP response: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l217
_("Error processing HTTP response\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l224
_("Ignoring unknown HTTP response line '%s'\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l244
_("Invalid cookie offered: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l253
// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/cstp.c#l321
_("<elided>");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l263
_("SSL certificate authentication failed\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l294
_("Response body has negative size (%d)\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l305
_("Unknown Transfer-Encoding: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l320
_("HTTP body %s (%d)\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l334
// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l363
_("Error reading HTTP response body\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l348
_("Error fetching chunk header\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l374
_("Error fetching HTTP response body\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l377
_("Error in chunked decoding. Expected '', got: '%s'");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l390
_("Cannot receive HTTP 1.0 body without closing connection\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l475
// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l935
// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/cstp.c#l244
_("Failed to open HTTPS connection to %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l490
_("Failed to send GET request for new config\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l514
_("Downloaded config file did not match intended SHA1\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l528
_(""
"Error: Running the 'Cisco Secure Desktop' trojan on Windows is not yet "
"implemented.\n" );

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l536
_(""
"Error: Server asked us to run CSD hostscan.\n"
"You need to provide a suitable --csd-wrapper argument.\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l543
_(""
"Error: Server asked us to download and run a 'Cisco Secure Desktop' trojan.\n"
"This facility is disabled by default for security reasons, so you may wish "
"to enable it.\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l550
_("Trying to run Linux CSD trojan script.\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l561
_("Failed to open temporary CSD script file: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l570
_("Failed to write temporary CSD script file: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l593
_("Invalid user uid=%ld\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l599
_("Failed to change to CSD home directory '%s': %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l605
_(""
"Warning: you are running insecure CSD code with root privileges\n"
"\t Use command line option \"--csd-user\"\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l647
_("Failed to exec CSD script %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l764
_("Failed to parse redirected URL '%s': %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l788
_("Cannot follow redirection to non-https URL '%s'\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l816
_("Allocating new path for relative redirect failed: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l973
_("Unexpected %d result from server\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l999
_("Unknown response from server\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l1099
_("Server requested SSL client certificate after one was provided\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l1108
_(""
"Try the --no-xmlpost option. If that works, please report as an OpenConnect "
"bug\n" );

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l1110
_("Server requested SSL client certificate; none was configured\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l1125
_("XML POST enabled\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l1172
_("Refreshing %s after 1 second...\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l1375
_("request granted");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l1376
_("general failure");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l1377
_("connection not allowed by ruleset");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l1378
_("network unreachable");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l1379
_("host unreachable");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l1380
_("connection refused by destination host");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l1381
_("TTL expired");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l1382
_("command not supported / protocol error");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l1383
_("address type not supported");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l1397
_("Error writing auth request to SOCKS proxy: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l1404
_("Error reading auth response from SOCKS proxy: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l1410
_("Unexpected auth response from SOCKS proxy: %02x %02x\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l1418
_("SOCKS proxy error %02x: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l1422
_("SOCKS proxy error %02x\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l1428
_("Requesting SOCKS proxy connection to %s:%d\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l1443
_("Error writing connect request to SOCKS proxy: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l1451
// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l1484
_("Error reading connect response from SOCKS proxy: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l1457
_("Unexpected connect response from SOCKS proxy: %02x %02x...\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l1477
_("Unexpected address type %02x in SOCKS connect response\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l1510
_("Requesting HTTP proxy connection to %s:%d\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l1518
_("Sending proxy request failed: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l1525
_("Error fetching proxy response\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l1532
_("Failed to parse proxy response '%s'\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l1538
_("Proxy CONNECT request failed: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l1545
_("Failed to read proxy response\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l1549
_("Unexpected continuation line after CONNECT response: '%s'\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l1565
_("Unknown proxy type '%s'\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/http.c#l1593
_("Only http or socks(5) proxies supported\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/auth.c#l159
_("Form choice has no name\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/auth.c#l244
_("name %s not input\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/auth.c#l251
_("No input type in form\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/auth.c#l263
_("No input name in form\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/auth.c#l295
_("Unknown input type %s in form\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/auth.c#l488
_("Cannot handle form method='%s', action='%s'\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/auth.c#l552
_("Empty response from server\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/auth.c#l563
_("Failed to parse server response\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/auth.c#l565
_("Response was:%s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/auth.c#l587
_("Received <client-cert-request> when not expected.\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/auth.c#l613
_("XML response has no \"auth\" node\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/auth.c#l647
_("No form handler; cannot authenticate.\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/auth.c#l721
_("Asked for password but '--no-passwd' set\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/auth.c#l1004
_("Enter credentials to unlock software token.");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/auth.c#l1012
_("Device ID:");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/auth.c#l1019
_("Password:");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/auth.c#l1026
_("PIN:");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/auth.c#l1057
_("User bypassed soft token.\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/auth.c#l1064
_("All fields are required; try again.\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/auth.c#l1074
// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/auth.c#l1206
_("General failure in libstoken.\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/auth.c#l1078
_("Incorrect device ID or password; try again.\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/auth.c#l1085
_("Invalid PIN format; try again.\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/auth.c#l1095
_("Soft token init was successful.\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/auth.c#l1121
// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/auth.c#l1154
_("OK to generate INITIAL tokencode\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/auth.c#l1126
// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/auth.c#l1158
_("OK to generate NEXT tokencode\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/auth.c#l1131
// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/auth.c#l1163
_("Server is rejecting the soft token; switching to manual entry\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/auth.c#l1201
_("Generating RSA token code\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/auth.c#l1229
_("Generating OATH TOTP token code\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/auth.c#l1239
_("Unable to generate OATH TOTP token code: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/library.c#l350
_("Failed to parse server URL '%s'\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/library.c#l356
_("Only https:// permitted for server URL\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/compat.c#l207
_("ERROR: Cannot initialize sockets\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/dtls.c#l123
_("Initialise DTLSv1 CTX failed\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/dtls.c#l135
_("Set DTLS cipher list failed\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/dtls.c#l148
_("Initialise DTLSv1 session failed\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/dtls.c#l169
_("Not precisely one DTLS cipher\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/dtls.c#l187
_(""
"SSL_set_session() failed with old protocol version 0x%x\n"
"Are you using a version of OpenSSL older than 0.9.8m?\n"
"See http://rt.openssl.org/Ticket/Display.html?id=1751\n"
"Use the --no-dtls command line option to avoid this message\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/dtls.c#l215
_("Established DTLS connection (using OpenSSL). Ciphersuite %s.\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/dtls.c#l240
_("Your OpenSSL is older than the one you built against, so DTLS may fail!");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/dtls.c#l289
// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/dtls.c#l293
// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/dtls.c#l432
_("DTLS handshake timed out\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/dtls.c#l290
_(""
"This is probably because your OpenSSL is broken\n"
"See http://rt.openssl.org/Ticket/Display.html?id=2984\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/dtls.c#l297
_("DTLS handshake failed: %d\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/dtls.c#l345
_("Unknown DTLS parameters for requested CipherSuite '%s'\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/dtls.c#l358
_("Failed to set DTLS priority: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/dtls.c#l379
_("Failed to set DTLS session parameters: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/dtls.c#l401
_("Failed to set DTLS MTU: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/dtls.c#l420
_("Established DTLS connection (using GnuTLS). Ciphersuite %s.\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/dtls.c#l435
_("DTLS handshake failed: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/dtls.c#l453
_("DTLS connection attempted with an existing fd\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/dtls.c#l459
_("No DTLS address\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/dtls.c#l466
_("Server offered no DTLS cipher option\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/dtls.c#l473
_("No DTLS when connected via proxy\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/dtls.c#l480
_("Open UDP socket for DTLS:");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/dtls.c#l511
// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/dtls.c#l640
_("Unknown protocol family %d. Cannot do DTLS\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/dtls.c#l519
_("Bind UDP socket for DTLS");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/dtls.c#l526
_("UDP (DTLS) connect:\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/dtls.c#l592
_("DTLS option %s : %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/dtls.c#l650
_("DTLS initialised. DPD %d, Keepalive %d\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/dtls.c#l673
_("Attempt new DTLS connection\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/dtls.c#l700
_("Received DTLS packet 0x%02x of %d bytes\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/dtls.c#l714
_("Got DTLS DPD request\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/dtls.c#l720
_("Failed to send DPD response. Expect disconnect\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/dtls.c#l724
_("Got DTLS DPD response\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/dtls.c#l728
_("Got DTLS Keepalive\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/dtls.c#l733
_("Unknown DTLS packet type %02x, len %d\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/dtls.c#l754
_("DTLS rekey due\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/dtls.c#l761
_("DTLS Rehandshake failed; reconnecting.\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/dtls.c#l770
_("DTLS Dead Peer Detection detected dead peer!\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/dtls.c#l776
_("Send DTLS DPD\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/dtls.c#l781
_("Failed to send DPD request. Expect disconnect\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/dtls.c#l794
_("Send DTLS Keepalive\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/dtls.c#l799
_("Failed to send keepalive request. Expect disconnect\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/dtls.c#l834
_("DTLS got write error %d. Falling back to SSL\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/dtls.c#l849
_("DTLS got write error: %s. Falling back to SSL\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/dtls.c#l866
_("Sent DTLS packet of %d bytes; DTLS send returned %d\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/dtls.c#l878
_("Built against SSL library with no Cisco DTLS support\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/cstp.c#l109
_("TCP_INFO rcv mss %d, snd mss %d, adv mss %d, pmtu %d\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/cstp.c#l128
_("TCP_MAXSEG %d\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/cstp.c#l202
_("Failed to initialise DTLS secret\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/cstp.c#l264
_("VPN service unavailable; reason: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/cstp.c#l269
_("Got inappropriate HTTP CONNECT response: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/cstp.c#l276
_("Got CONNECT response: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/cstp.c#l304
// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/cstp.c#l312
_("No memory for options\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/cstp.c#l336
_("X-DTLS-Session-ID not 64 characters; is: \"%s\"\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/cstp.c#l373
_("Unknown CSTP-Content-Encoding %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/cstp.c#l443
_("No MTU received. Aborting\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/cstp.c#l450
_("No IP address received. Aborting\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/cstp.c#l456
_("Reconnect gave different Legacy IP address (%s != %s)\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/cstp.c#l464
_("Reconnect gave different Legacy IP netmask (%s != %s)\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/cstp.c#l472
_("Reconnect gave different IPv6 address (%s != %s)\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/cstp.c#l480
_("Reconnect gave different IPv6 netmask (%s != %s)\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/cstp.c#l500
_("CSTP connected. DPD %d, Keepalive %d\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/cstp.c#l536
_("Compression setup failed\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/cstp.c#l544
_("Allocation of deflate buffer failed\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/cstp.c#l588
_("Cookie is no longer valid, ending session\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/cstp.c#l592
_("sleep %ds, remaining timeout %ds\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/cstp.c#l627
_("inflate failed\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/cstp.c#l644
_("Received compressed data packet of %ld bytes\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/cstp.c#l663
_("SSL read error %d (server probably closed connection); reconnecting.\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/cstp.c#l688
_("SSL_write failed: %d\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/cstp.c#l704
_("SSL read error: %s; reconnecting.\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/cstp.c#l727
_("SSL send failed: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/cstp.c#l758
_("Unexpected packet length. SSL_read returned %d but packet is\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/cstp.c#l770
_("Got CSTP DPD request\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/cstp.c#l776
_("Got CSTP DPD response\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/cstp.c#l781
_("Got CSTP Keepalive\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/cstp.c#l786
_("Received uncompressed data packet of %d bytes\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/cstp.c#l801
_("Received server disconnect: %02x '%s'\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/cstp.c#l809
_("Compressed packet received in !deflate mode\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/cstp.c#l817
_("received server terminate packet\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/cstp.c#l824
_("Unknown packet %02x %02x %02x %02x %02x %02x %02x %02x\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/cstp.c#l867
_("SSL wrote too few bytes! Asked for %d, sent %d\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/cstp.c#l894
_("CSTP rekey due\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/cstp.c#l901
_("Rehandshake failed; attempting new-tunnel\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/cstp.c#l912
_("CSTP Dead Peer Detection detected dead peer!\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/cstp.c#l916
_("Reconnect failed\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/cstp.c#l931
_("Send CSTP DPD\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/cstp.c#l942
_("Send CSTP Keepalive\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/cstp.c#l969
_("deflate failed %d\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/cstp.c#l989
_("Sending compressed data packet of %d bytes\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/cstp.c#l1001
_("Sending uncompressed data packet of %d bytes\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/cstp.c#l1041
_("Send BYE packet: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/mainloop.c#l177
_("Caller paused the connection\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/mainloop.c#l185
_("No work to do; sleeping for %d ms...\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/mainloop.c#l205
_("WaitForMultipleObjects failed: %lx\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/script.c#l65
_("Discard bad split include: \"%s\"\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/script.c#l69
_("Discard bad split exclude: \"%s\"\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/script.c#l323
// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/script.c#l331
_("Failed to spawn script '%s' for %s: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/script.c#l338
_("Script '%s' exited abnormally (%x)\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/script.c#l347
_("Script '%s' returned error %d\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/tun.c#l81
_("open net");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/tun.c#l90
_("SIOCSIFMTU");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/tun.c#l105
_("Could not open /dev/tun for plumbing");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/tun.c#l109
_("Can't push IP");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/tun.c#l119
_("Can't set ifname");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/tun.c#l126
_("Can't open %s: %s");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/tun.c#l134
_("Can't plumb %s for IPv%d: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/tun.c#l198
// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/tun.c#l308
_("Failed to open tun device: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/tun.c#l209
_("TUNSETIFF failed: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/tun.c#l221
_("open /dev/tun");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/tun.c#l227
_("Failed to create new tun");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/tun.c#l233
_("Failed to put tun file descriptor into message-discard mode");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/tun.c#l268
_("Invalid interface name '%s'; must match 'tun%%d'\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/tun.c#l278
_("Cannot open '%s': %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/tun.c#l317
_("TUNSIFHEAD");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/tun.c#l356
_("socketpair failed: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/tun.c#l361
_("fork failed: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/tun.c#l365
_("setpgid");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/tun.c#l369
_("execl");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/tun.c#l374
_("(script)");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/tun.c#l417
_("Unknown packet (len %d) received: %02x %02x %02x %02x...\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/tun.c#l434
_("Failed to write incoming packet: %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/tun-win32.c#l71
_("Error accessing registry key for network adapters\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/tun-win32.c#l114
_("Ignoring non-matching TAP interface \"%s\"");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/tun-win32.c#l128
_("No Windows-TAP adapters found. Is the driver installed?\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/tun-win32.c#l146
_("Failed to open %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/tun-win32.c#l151
_("Opened tun device %s\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/tun-win32.c#l158
_("Failed to obtain TAP driver version: %lx\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/tun-win32.c#l163
_("Error: TAP-Windows driver v9.9 or greater is required (found %ld.%ld)\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/tun-win32.c#l179
_("Failed to set TAP IP addresses: %lx\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/tun-win32.c#l189
_("Failed to set TAP media status: %lx\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/tun-win32.c#l213
_("Failed to read from TAP device: %lx\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/tun-win32.c#l224
_("Failed to complete read from TAP device: %lx\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/tun-win32.c#l241
_("Wrote %ld bytes to tun\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/tun-win32.c#l251
_("Waiting for tun write...\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/tun-win32.c#l254
_("Wrote %ld bytes to tun after waiting\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/tun-win32.c#l260
_("Failed to write to TAP device: %lx\n");

// http://git.infradead.org/users/dwmw2/openconnect.git/blob/c02460c444:/tun-win32.c#l285
_("Spawning tunnel scripts is not yet supported on Windows\n");
